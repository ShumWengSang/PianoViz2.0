Please, read this before updating:
   - Backup your project
   - If you experiment errors after updating, please delete the MidiPlayer folder from your project before updating.
   - Package Manager has some bugs, read here: https://docs.unity3d.com/Manual/upm-errors.html and here https://forum.unity.com/threads/package-manager-not-showing-latest-version-from-asset-store.791718/

Thank for your comments and talks, that help me to make Maestro MPTK better.

V2.89.1 - 2021-10-03
	Add helper link for the MidiFileLoader inspector and the related page on the web site.
	Add delayed start to MPTK_Play (Pro version)
	Add delayed stop to MPTK_Stop (Pro version)
	Add short script demo for MIDI looping
	Fix instanciation for all MPTK OnEventxxxx to avoid crash in rare cases.
	Fix Preset change for channel 9 are now enabled for MidiStreamPlayer
	Add new kind of demos: MVP (for Minimum Viable Product) has just enough core features to effectively deploy the product
	MVP Free: MidiLoop and TheSimplestMidiLoader
	MVP Pro: Spatializer3D for spatializing MIDI by tracks in a few lines of code

V2.89.0 - 2021-08-30
	New with Midi Player and Stream Player (MidiSynth)
		Added OnMidiEvent can be used like a preprocessor of the MIDI events: it's possible to change the value of the MIDI events to modify in real time the song playing. [Pro]
		Added MPTK_TransExcludedChannel method useful to exclude a channel for transposing (in general, channel 9 for drums).
		Added MPTK_keepPlayingNonLooped properties: when set to true, NoteOff or Duration for non-looped samples are ignored and the samples play through to the end.
		Synth rate can be set to any value from the inspector or with MPTK_SynthRate.
		Output rate and buffer size can be modified when playing but only for test purpose.
		Added changing output rate and buffer size for iOS, but stay experimental.
		MPTK_ChannelPresetChange: apply bank and preset change even if not available but return false.
		MPTK_ChannelForcedPresetSet: apply bank and preset change even if not available but return false, able now to force bank.
	New with Midi Player
		Added MPTK_RealTime properties: real time since the start of the MIDI.
		Added MPTK_KeepEndTrack properties: when set to true, meta MIDI event End Track are keep. Default is false.
		Added MPTK_TickLastNote properties: tick position for the last note-on found.
		Added MPTK_PositionLastNote properties: real time position in millisecond for the last note-on found in the MIDI.
		Added FootPrint capabilities: search a MIDI from a footprint and calculate a score tempo. [Pro]
	New with inspector foldout "Midi Parameters"
		Added "Channel Exception" (MPTK_TransExcludedChannel) "Apply transpose on all channels except this one. -1 to apply all. Default is 9 because generally it's the drum channel and we don't want to transpose drum instruments!"
		Added "Real Time" (MPTK_RealTime) "Real time from the start of the playing. Tempo or speed change have no impact."
		Added "Keep MIDI EndTrack" (MPTK_KeepEndTrack) "When set to true, meta MIDI event End Track are keep and these MIDI events are taken into account for calculate the full duration of the MIDI."
	New with inspector foldout "Synth Parameters"
		Added "Lean Synth Starting" (MPTK_LeanSynthStarting) "Sets the speed of the increase of the volume of the audio source when synth is starting."
		Added "Keep Playing Non Looped" (MPTK_KeepPlayingNonLooped) "When the option is on, non looped samples (drum samples for the most part) are play through to the end."
		Added "Release Time Modifier" (MPTK_ReleaseTimeMod) "Multiplier to increase or decrease the default release time defined in the SoundFont for each instrument."
		Added "Unity Audio Setting" (MPTK_AudioSettingFromUnity) "If checked then synth rate and buffer size will be automatically defined by Unity in accordance of the capacity of the hardware."
		Added "Synth Rate Free" (MPTK_EnableFreeSynthRate) "Allow free setting of the Synth Rate."
	Varied
		Removed full errors stack logging because Unity do the job since version 2019!
		New site for hosting the API documentation https://mptkapi.paxstellar.com/annotated.html
	Issues corrected
		Fixed with SoundFont setup windows, no sample was removed when unselecting banks. 
		Fixed with SoundFont Effect, modified values in inspector was not saved when running.
		Fixed with Midi Synth, changing the bank was not taken into account until changing the preset.
		Fixed for MacOS, opening folders functions did'nt open the finder.
		Fixed for MacOS, now inspector can change synth output rate (experimental). 
		Fixed for iOS, now it's possible to change the Attack delay.
		Fixed for MPTK_ChannelForcedPresetSet, restore default preset from MIDI stream was wrong.

V2.88.2 - 2021-06-12
	New with MidiFilePlayer
		Add method MPTK_ReadMidiEvents which returns a list of MIDI events (List<MPTKEvent>)
	New with MPTKEvent class for the synthesizer parameters
		Add methods MTPK_GetSynthParameterDefaultValue, MTPK_GetSynthParameterLabel, MTPK_GetSynthParameterListGenerator, MTPK_ClearSynthParameter [Pro].
	New with MidiStreamPlayer
		MPTK_PlayPitchWheelChange - Play a MIDI pitch change event for all notes on the channel [PRO].
		MPTK_PlayPitchWheelSensitivity - Play a MIDI pitch sensitivity change for all notes on the channel [PRO].
	New with MidiFileLoader
		Add MPTK_SearchMidiToPlay(string name) able to find a MIDI in the Unity resources folder MidiDB which contains the name (case sensitive) [Pro].
	New with MidiSpatializer
		Capabilities to render multi source based on MIDI tracks, not only channels [PRO].
		Tested with Resonance Audio and DearVR.
		New look and functions for the demos TestMidiSpatialization [FREE] and SpatializerFly [PRO].
	New with MPTKEvent
		Add Controller "Registered Parameter Number" (RPN).
		New setting available for soundfont effect (Reverb and Chorus).
	New with SoundFont 
		Now MPTK is able to read SoundFont based on 24 bits samples (but played in 16 bits). 	
	Various points
		Add shortcut menu for creation of each prefab
		Cleaning of the resource folder.
		Creation of a Discord Server. See here https://discord.gg/NhjXPTdeWk

V2.88.1 - 2021-04-17
	New with MidiFileLoader
		Add the method MPTK_Load(string path) able to load a midi file from a folder on the local desktop (not only from MidiDB) [Pro].
		Add reading MIDI Meta events KeySignature and TimeSignature.
		Add properties MPTK_KeySigSharpsFlats and MPTK_KeySigMajorMinor from Key Signature.
	Demo
		Update TestMidiFileLoad, loading a local MIDI file [Pro].
	Various points
		Add direct access to the about with the menu MPTK/Version and Doc.
		Add direct access to the demonstrations with the menu MPTK/Load Demonstration.
		As usual, a lot of minor updates, enhancements, corrections ...

V2.88 - 2021-04-03
	New with MidiFilePlayer
		Precalculation of the real-time position taking into account all "Tempo Change" events (tempo mapping function).
		Properties MPTK_Duration and MPTK_Position are calculated with the real time value.
		Properties MPTK_Duration and MPTK_Position are now no longer related to speed ratio (MPTK_Speed).
		API: MPTK_LastEventPlayed, MPTK_PositionFirstNote, MPTK_TickFirstNote, MPTK_SearchEventFromTime.
		Add MPTK_LoadTime = time in millisecond to load and analyse a MIDI file.
	New with MPTKEvent class
		Add RealTime properties: time of the event from start in milliseconds.
		Add Index properties: event index in the event's MPTK_SynthRatelist from MPTK_ReadMidiEvents or from callback OnEventNotesMidi. 
	New with MidiFileWriter2  [Pro]
		Automatic tracks creation and ending.
		MIDI events sequence can be directly played with the internal MPTK midi sequencer (no temp file created). 
		New useful API available: MPTK_AddChangePreset, MPTK_AddNote, MPTK_AddChordFromLib, MPTK_AddChordFromRange... 
		Two new demos mainly based on MidiFileWriter2.  See scenes TinyMidiSequencer and TestMidiGenerator.
	New with MPTKChordBuilder and MPTKRangeLib  [Pro]
		Add helpers for building chords and ranges
	Various points
		MidiListPlayer : Some bugs corrected [Pro]
		Updated: SoundFont GeneralUser GS v1.471 [Free]
		As usual, a lot of minor updates, enhancements, corrections ...

V2.872 - 2021-01-24
	Replace Datetime.Now with the more efficient Datetime.UtcNow (thank github.com/Ideae for this proposition).
	Corrected issue when a noteoff is processed in the attack phase (thank github.com/Ideae for detection and proposition).
	Corrected issue with MPTK_TickCurrent. MIDI events at this exact tick position was missing, so some midi events could be lost.
	New synth parameter MPTK_CutOffVolume. Sample is stopped when amplitude is below this value. Increase for better performance but with degraded quality because sample are stopped earlier.
	Changed default cutoff volume (MPTK_CutOffVolume) from 0.1f to 0.05f. (can be increased in case of excessive DSP Load)
	Demo TestMidiFilePlayerScripting: add how to stop playing at a specific midi tick. 
	Added direct link to API helper in the inspector header of each prefab.

V2.87 - 2020-12-29 (Pro only)
	New MPTK event triggered by the audio engine. Absolutely essential if you are writing something like a sequencer or a rhythm game.

V2.86 2020-12-02
	Android: Ready to fight latency with Oboe. Integration with Unity asset Oboe for low latency on Android without code to write [Pro].
	Synthesizer: Real Time modification of synth parameters available by script to change default SoundFont generator value (ADSR, LFO, Effect, ...) [Pro].
	MIDI Device: To avoid latency with MIDI keyboard, add callback possibility for reading midi events from a device [Pro]. 
	MIDI File Setup: Improvements of the MIDI File Setup windows.
	Add timestamp at creation of a MPTKEvent. Usefull for building Rhytm Game.
	Prefab MidiExternalPlay: now able to load and play MIDI from a byte array.
	Corrected MIDI Loading for error in some cases when midi tcontains a sysex.
	Demo TestMidiFilePlayerScripting: add demo for method MPTK_TickCurrent to set random start playing inside the MIDI file.
	Demo TestMidiStream: have fun with MTPK_ModifySynthParameter to change synth behaviors [Pro].
	Demo TestEuclideanRhythme: add a tap zone to trig hit drum manually. Check latency and real time synth change with MTPK_ModifySynthParameter [Pro].
	Demo TestMidiKeyboard: switch to callback read midi events mode.

V2.85 - 2020-10-22
	MIDI Device: MIDI output device capabilities on top of MIDI reading device [Pro].
	Prefab all: "Release Same Note" and "Kill By Exclusive Class" are now visibles from all prefab editor.
	Prefab MidiStreamPlayer:  "Kill By Exclusive Class" set to false by default.
	Demo EuclideanRhythme: Add Hit Volume + Minor design change [Pro].
	Prefab MidiExternalPlayer: add better control on MIDI loading error [Pro].
	Add new demo: read and write MIDI messages with a connected device (synthesizer, keyboard, light console ...) [Pro].
	Corrected MPTK_LoadLiveSF path(thx Mike!) [Pro]

V2.841 - 2020-09-14
	MIDI Setup and SoundFont Setup Windows: design change to be compliant with recent versions of Unity.
	MIDI Setup Windows: Add function to load all Midis from a folder.

V2.84 - 2020-09-09
	MIDI Player: Add functions to facilitate integration with Bolt [Pro].
	MIDI Player: Add functions able to force preset by channel regardless MIDI Change Preset message from the MIDI.
	MIDI Player: Remove wait time when switching between MIDI. Now, can switch between MIDI in an instant. 
	MIDI Player: Start and Stop playing gradually (ramp-up) [Pro]. 
	MIDI Player: Call MPTK_Stop when MidiFilePlayer is destroyed (more secure than only OnApplicationQuit). 
	MIDI Channel: Consistency, now all MIDI channels number are in the range 0 to 15 (so, drum is on channel 9).
	MIDI Player: now play with Time.timeScale = 0.
	Prefab MidiListPlayer: Inspector duration format saved [Pro].
	Prefab MidiExternalPlayer: Better error management [Pro].
	Demo TestMidiStream: Better demonstration for the Chord and Scales generators [Pro].
	Demo TestMidiFilePlayerScripting: Change instrument/preset, disable/enable channel on fly.
	Demo TestMidiPlayList: Add new functions and some corrections [Pro].
	Demo EuclideanRhythme: Add Mute and Solo filter + Minor design change [Pro].
	Demo TestExternalMidiPlay: Minor design change and add MIDI Online Roulette!!! [Pro].

V2.83 - 2020-06-27
	Add Spatialization by channel/instrument [Pro]
	Add new Demo for spatialization by channel/instrument [Pro].
	Add New API and inspector attributes for ReleaseSameNote and KillByExclusiveClass modifier.
	Change MPTK_PauseOnDistance remplaced by MPTK_Spatialize.

V2.82 - 2020-05-15
	Add Spatialization capabilities. Microsoft HRTF Spatializer and Oculus Spatializer tested.
	Add an optionnal delay before playing a note or a chord (default is 0), humanizing and playing arpeggio is now possible.
	Add API to define volume by midi channel.  
	Add integration with Adventure Creator - [Pro]
	Add integration with PlayerMaker - [Pro]
	Add capabilities to build Range and Chord (usefull for algo music) - [Pro]
	Add direct links to documentation in Prefab Inspector.
	Performance: replace DateTime.Now (thank Peter!).
	Performance: new rule in case of DSP overload: try to stop one older voice.
	Demo EuclideanRhythm: 3D animation + Humanization parameters.
	Demo TestMidiStream: add chord builder tests.
	Demo TestMidiFilePlayerMulti: take in account spatialization.
	Demo TestSpatialization: new demo.

V2.8 - 2020-04-03
	Add fluidsynth effects [Pro]
	Add Unity effects [Pro]
	Add integration with Cinematic Sequencer - Slate [Pro]
	Disable iOS synth change

V1.5 - 2018-06-01
	First release published on the store

*** Read the full version change directly in the Asset/MidiPlayerresource folder 